//
//  SuccesRegisterViewController.swift
//  patmeapp
//
//  Created by Juan Camilo on 19/01/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SuccesRegisterDisplayLogic: class
{
  func displaySomething(viewModel: SuccesRegister.Something.ViewModel)
}

class SuccesRegisterViewController: UIViewController, SuccesRegisterDisplayLogic
{
  var interactor: SuccesRegisterBusinessLogic?
  var router: (NSObjectProtocol & SuccesRegisterRoutingLogic & SuccesRegisterDataPassing)?
    var petObject: PetModel!
    @IBOutlet weak var imagePet: UIImageView!
    // MARK: Object lifecycle
    @IBOutlet weak var titlteLbl: UILabel!
    @IBOutlet weak var descLbl: UILabel!
    
    @IBOutlet weak var letsBtn: UIButton!
    
    @IBOutlet weak var addBtn: UIButton!
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = SuccesRegisterInteractor()
    let presenter = SuccesRegisterPresenter()
    let router = SuccesRegisterRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
      titlteLbl.text = String(format: NSLocalizedString("success_view_title_txt_1", comment: ""),petObject.name)
      descLbl.text = NSLocalizedString("success_view_title_txt_2", comment: "")
      letsBtn.setTitle(NSLocalizedString("success_view_title_btn_1", comment: ""), for: .normal)
      addBtn.setTitle(NSLocalizedString("success_view_title_btn_2", comment: ""), for: .normal)
      switch petObject.specie {
      case MainSpeciesEnum.dog:
          imagePet.image = UIImage(named: "Succes_dog.svg")
          
      case MainSpeciesEnum.cat:
          imagePet.image = UIImage(named: "Succes_cat.svg")

      case MainSpeciesEnum.bird:
          imagePet.image = UIImage(named: "Succes_bird.svg")
          print("is a bird")
          
      case MainSpeciesEnum.horse:
          imagePet.image = UIImage(named: "Succes_horse.svg")
          print("is a  horse")
          
      case MainSpeciesEnum.rabbit:
          imagePet.image = UIImage(named: "Succes_rabbit.svg")
          print("is a rabbit")
          
      case MainSpeciesEnum.other:
          imagePet.image = UIImage(named: "Succes-Check.svg")
          print("is a other")
          
      default:
          print("Have you done something new?")
      }
      
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = SuccesRegister.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: SuccesRegister.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
